{"version":3,"file":"figma-transformer.cjs.development.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { Node } from \"figma-js\";\nimport { Shortcut } from \"./types\";\n\nfunction uniqBy(arr: any[], fn: string, set = new Set()) {\n    return arr.filter(el => (v => !set.has(v) && set.add(v))(el[fn]));\n}\n\nfunction groupBy(arr: any[], key: string) {\n    return arr.reduce(function(rv, x) {\n        (rv[x[key]] = rv[x[key]] || []).push(x);\n        return rv;\n    }, {});\n}\n\nexport const groupNodes = (nodes: Node[]): Record<Shortcut, Node[]> =>\n    groupBy(uniqBy(nodes, \"id\"), \"type\");\n","import {\n    Document,\n    FileResponse,\n    Style,\n    ComponentMetadata,\n    Node,\n} from \"figma-js\";\nimport { groupNodes } from \"./utils\";\nimport { ProcessedFile } from \"./types\";\n\nexport function processFile(data: FileResponse, id: string): ProcessedFile {\n    const {\n        name,\n        lastModified,\n        thumbnailUrl,\n        version,\n        document,\n        styles,\n        components,\n    } = data;\n\n    const [processedNodes, processedShortcuts] = processNodes(\n        document,\n        styles,\n        components,\n        id\n    );\n\n    return {\n        fileId: id,\n        name,\n        lastModified,\n        thumbnailUrl,\n        version,\n        children: processedNodes[0].children,\n        shortcuts: groupNodes(processedShortcuts),\n    };\n}\n\nexport function processNodes(\n    nodes: Document,\n    documentStyles: { [key: string]: Style },\n    components: { [key: string]: ComponentMetadata },\n    fileId: string\n) {\n    const parsedStyles = new Map(Object.entries(documentStyles));\n    const parsedComponents = new Map(Object.entries(components));\n\n    const traverseChildren = (node: any, parentId: string) => {\n        const { id, styles, children, ...rest } = node;\n        let nodeStyles: any[] = [];\n\n        // If node has styles definitions populate that with the actual styles\n        if (styles != null) {\n            nodeStyles = Object.entries(styles).map(([key, styleId]) => {\n                const documentStyle = parsedStyles.get(styleId as string);\n\n                return {\n                    id: styleId,\n                    ...documentStyle,\n                    styles: node[`${key}s`],\n                    typeStyles: node.style,\n                    type: \"STYLE\",\n                };\n            });\n        }\n\n        // Reached a leaf so returning the simplified node\n        if (children == null || children.length === 0) {\n            return [[{ id, parentId, fileId, ...rest }], nodeStyles];\n        }\n\n        // If it gets here then it means it has children\n        // so we're going to recursively go through them\n        // and combine everything\n        const [parsedChildren, shortcuts] = children.reduce(\n            (acc: [Node[], Node[]], child: Node) => {\n                const [accChildren, accShortcuts] = acc;\n                const [tChildren, tShortcuts] = traverseChildren(child, id);\n                return [\n                    [...accChildren, ...tChildren],\n                    [...accShortcuts, ...tChildren, ...tShortcuts],\n                ];\n            },\n            [[], []]\n        );\n\n        const componentInfo = parsedComponents.get(id);\n\n        // Finally we return the parsed node with the\n        // parsed children grouped by type\n        const parsedNode = {\n            id,\n            parentId,\n            fileId,\n            ...rest,\n            ...(componentInfo && componentInfo),\n            children: parsedChildren,\n            shortcuts: groupNodes(shortcuts),\n        };\n\n        return [[parsedNode], shortcuts];\n    };\n\n    return traverseChildren(nodes, \"0:0\");\n}\n"],"names":["uniqBy","arr","fn","set","Set","filter","el","v","has","add","groupBy","key","reduce","rv","x","push","groupNodes","nodes","processFile","data","id","name","lastModified","thumbnailUrl","version","document","styles","components","processNodes","processedNodes","processedShortcuts","fileId","children","shortcuts","documentStyles","parsedStyles","Map","Object","entries","parsedComponents","traverseChildren","node","parentId","rest","nodeStyles","map","styleId","documentStyle","get","typeStyles","style","type","length","acc","child","accChildren","accShortcuts","tChildren","tShortcuts","parsedChildren","componentInfo","parsedNode"],"mappings":"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"}